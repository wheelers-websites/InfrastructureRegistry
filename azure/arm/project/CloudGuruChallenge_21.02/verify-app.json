{
    "$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion":"1.0.0.0",
    "parameters":{
        "region":{
            "type":"string"
        },
        "name":{
            "type":"string"
        },
        "project":{
            "type":"string"
        }
    },
    "resources":[
        {
            "apiVersion":"2021-01-15",
            "kind":"MongoDB",
            "location":"[resourceGroup().location]",
            "name":"[variables('dbAccount')]",
            "properties":{
                "backupPolicy":{
                    "type":"Periodic",
                    "periodicModeProperties":{
                        "backupIntervalInMinutes":240,
                        "backupRetentionIntervalInHours":8
                    }
                },
                "databaseAccountOfferType":"Standard",
                "enableFreeTier":true,
                "enableMultipleWriteLocations":false,
                "isVirtualNetworkFilterEnabled":false,
                "locations":[
                    {
                        "id":"[concat(variables('dbAccount'), '-', resourceGroup().location)]",
                        "failoverPriority":0,
                        "isZoneRedundant":true,
                        "locationName":"[parameters('region')]"
                    }
                ]
            },
            "tags":{
                "CosmosAccountType":"Non-Production",
                "Name":"[variables('dbAccount')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.DocumentDb/databaseAccounts"
        },
        {
            "apiVersion":"2021-01-15",
            "dependsOn":[
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('dbAccount'))]"
            ],
            "name":"[concat(variables('dbAccount'), '/', variables('dbName'))]",
            "properties":{
                "resource":{
                    "id":"[variables('dbName')]"
                }
            },
            "tags":{
                "Name":"[concat(variables('dbAccount'), '/', variables('dbName'))]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.DocumentDB/databaseAccounts/mongodbDatabases"
        },
        {
            "apiVersion":"2021-01-15",
            "dependsOn":[
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', variables('dbAccount'), variables('dbName'))]"
            ],
            "name":"[concat(variables('dbAccount'), '/', variables('dbName'), '/', variables('tblUsers'))]",
            "properties":{
                "resource":{
                    "id":"[variables('tblUsers')]"
                },
                "options":{
                    "autoscaleSettings":{
                        "maxThroughput":4000
                    }
                }
            },
            "tags":{
                "Name":"[concat(variables('dbAccount'), '/', variables('dbName'), '/', variables('tblUsers'))]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections"
        },
        {
            "apiVersion":"2015-04-01",
            "dependsOn":[
                "[resourceId('Microsoft.Web/serverfarms', variables('aspName'))]"
            ],
            "location":"[resourceGroup().location]",
            "name":"[concat(variables('aspName'),'-scaling')]",
            "properties":{
                "enabled":true,
                "notifications":[
                    {
                        "email":{
                            "sendToSubscriptionAdministrator":true,
                            "sendToSubscriptionCoAdministrators":true
                        },
                        "operation":"Scale"
                    }
                ],
                "profiles":[
                    {
                        "capacity":{
                            "default":1,
                            "maximum":3,
                            "minimum":1
                        },
                        "name":"AutoScaling",
                        "rules":[
                            {
                                "metricTrigger":{
                                    "metricName":"CpuPercentage",
                                    "metricNamespace":"",
                                    "metricResourceUri":"[resourceId('Microsoft.Web/serverFarms/', variables('aspName'))]",
                                    "operator":"GreaterThan",
                                    "statistic":"Average",
                                    "threshold":70,
                                    "timeAggregation":"Average",
                                    "timeGrain":"PT5M",
                                    "timeWindow":"PT10M"
                                },
                                "scaleAction":{
                                    "cooldown":"PT10M",
                                    "direction":"Increase",
                                    "type":"ChangeCount",
                                    "value":1
                                }
                            },
                            {
                                "metricTrigger":{
                                    "metricName":"CpuPercentage",
                                    "metricNamespace":"",
                                    "metricResourceUri":"[resourceId('Microsoft.Web/serverFarms/', variables('aspName'))]",
                                    "operator":"LessThan",
                                    "statistic":"Average",
                                    "threshold":30,
                                    "timeAggregation":"Average",
                                    "timeGrain":"PT5M",
                                    "timeWindow":"PT10M"
                                },
                                "scaleAction":{
                                    "cooldown":"PT2M",
                                    "direction":"Decrease",
                                    "type":"ChangeCount",
                                    "value":1
                                }
                            }
                        ]
                    }
                ],
                "targetResourceUri":"[resourceId('Microsoft.Web/serverfarms', variables('aspName'))]"
            },
            "tags":{
                "Name":"[variables('vnetName')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Insights/autoscalesettings"
        },
        {
            "apiVersion":"2020-05-01",
            "location":"global",
            "name":"[variables('fdPrd')]",
            "properties":{
                "backendPools":[
                    {
                        "name":"PrdBackend",
                        "properties":{
                            "backends":[
                                {
                                    "address":"[concat(variables('appName'), '.azurewebsites.net')]",
                                    "backendHostHeader":"[concat(variables('appName'), '.azurewebsites.net')]",
                                    "enabledState":"Enabled",
                                    "httpPort":80,
                                    "httpsPort":443,
                                    "priority":1,
                                    "weight":100
                                }
                            ],
                            "healthProbeSettings":{
                                "id":"[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', variables('fdPrd'), 'PrdHealthProbe')]"
                            },
                            "loadBalancingSettings":{
                                "id":"[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', variables('fdPrd'), 'PrdLoadBalancing')]"
                            }
                        }
                    }
                ],
                "enabledState":"Enabled",
                "frontendEndpoints":[
                    {
                        "name":"PrdFrontend",
                        "properties":{
                            "hostName":"[concat(variables('fdPrd'), '.azurefd.net')]",
                            "resourceState":"Enabled",
                            "sessionAffinityEnabledState":"Disabled"
                        }
                    }
                ],
                "healthProbeSettings":[
                    {
                        "name":"PrdHealthProbe",
                        "properties":{
                            "intervalInSeconds":120,
                            "path":"/",
                            "protocol":"Https"
                        }
                    }
                ],
                "loadBalancingSettings":[
                    {
                        "name":"PrdLoadBalancing",
                        "properties":{
                            "sampleSize":4,
                            "successfulSamplesRequired":2
                        }
                    }
                ],
                "routingRules":[
                    {
                        "name":"PrdHttp",
                        "properties":{
                            "acceptedProtocols":[
                                "Http"
                            ],
                            "enabledState":"Enabled",
                            "frontendEndpoints":[
                                {
                                    "id":"[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', variables('fdPrd'), 'PrdFrontend')]"
                                }
                            ],
                            "patternsToMatch":[
                                "/*"
                            ],
                            "routeConfiguration":{
                                "@odata.type":"#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration",
                                "redirectProtocol":"HttpsOnly",
                                "redirectType":"Moved"
                            }
                        }
                    },
                    {
                        "name":"PrdHttps",
                        "properties":{
                            "acceptedProtocols":[
                                "Https"
                            ],
                            "enabledState":"Enabled",
                            "frontendEndpoints":[
                                {
                                    "id":"[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', variables('fdPrd'), 'PrdFrontend')]"
                                }
                            ],
                            "patternsToMatch":[
                                "/*"
                            ],
                            "routeConfiguration":{
                                "@odata.type":"#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "backendPool":{
                                    "id":"[resourceId('Microsoft.Network/frontDoors/backendPools', variables('fdPrd'), 'PrdBackend')]"
                                },
                                "forwardingProtocol":"MatchRequest"
                            }
                        }
                    }
                ]
            },
            "tags":{
                "Environment":"PRD",
                "Name":"[variables('fdPrd')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Network/frontDoors"
        },
        {
            "apiVersion":"2020-05-01",
            "location":"global",
            "name":"[variables('fdStg')]",
            "properties":{
                "backendPools":[
                    {
                        "name":"StgBackend",
                        "properties":{
                            "backends":[
                                {
                                    "address":"[concat(parameters('name'), '-site-stg.azurewebsites.net')]",
                                    "backendHostHeader":"[concat(parameters('name'), '-site-stg.azurewebsites.net')]",
                                    "enabledState":"Enabled",
                                    "httpPort":80,
                                    "httpsPort":443,
                                    "priority":1,
                                    "weight":100
                                }
                            ],
                            "healthProbeSettings":{
                                "id":"[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', variables('fdStg'), 'StgHealthProbe')]"
                            },
                            "loadBalancingSettings":{
                                "id":"[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', variables('fdStg'), 'StgLoadBalancing')]"
                            }
                        }
                    }
                ],
                "enabledState":"Enabled",
                "frontendEndpoints":[
                    {
                        "name":"StgFrontend",
                        "properties":{
                            "hostName":"[concat(variables('fdStg'), '.azurefd.net')]",
                            "resourceState":"Enabled",
                            "sessionAffinityEnabledState":"Disabled"
                        }
                    }
                ],
                "healthProbeSettings":[
                    {
                        "name":"StgHealthProbe",
                        "properties":{
                            "intervalInSeconds":120,
                            "path":"/",
                            "protocol":"Https"
                        }
                    }
                ],
                "loadBalancingSettings":[
                    {
                        "name":"StgLoadBalancing",
                        "properties":{
                            "sampleSize":4,
                            "successfulSamplesRequired":2
                        }
                    }
                ],
                "routingRules":[
                    {
                        "name":"StgHttp",
                        "properties":{
                            "acceptedProtocols":[
                                "Http"
                            ],
                            "enabledState":"Enabled",
                            "frontendEndpoints":[
                                {
                                    "id":"[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', variables('fdStg'), 'StgFrontend')]"
                                }
                            ],
                            "patternsToMatch":[
                                "/*"
                            ],
                            "routeConfiguration":{
                                "@odata.type":"#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration",
                                "redirectProtocol":"HttpsOnly",
                                "redirectType":"Moved"
                            }
                        }
                    },
                    {
                        "name":"StgHttps",
                        "properties":{
                            "acceptedProtocols":[
                                "Https"
                            ],
                            "enabledState":"Enabled",
                            "frontendEndpoints":[
                                {
                                    "id":"[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', variables('fdStg'), 'StgFrontend')]"
                                }
                            ],
                            "patternsToMatch":[
                                "/*"
                            ],
                            "routeConfiguration":{
                                "@odata.type":"#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "backendPool":{
                                    "id":"[resourceId('Microsoft.Network/frontDoors/backendPools', variables('fdStg'), 'StgBackend')]"
                                },
                                "forwardingProtocol":"MatchRequest"
                            }
                        }
                    }
                ]
            },
            "tags":{
                "Environment":"STG",
                "Name":"[variables('fdStg')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Network/frontDoors"
        },
        {
            "apiVersion":"2019-09-01",
            "location":"[resourceGroup().location]",
            "name":"[variables('vnetName')]",
            "properties":{
                "addressSpace":{
                    "addressPrefixes":[
                        "10.0.0.0/24"
                    ]
                },
                "enableDdosProtection":false,
                "subnets":[
                    {
                        "name":"public-1",
                        "properties":{
                            "addressPrefix":"10.0.0.0/28",
                            "delegations":[
                                {
                                    "name":"server-delegation",
                                    "properties":{
                                        "serviceName":"Microsoft.Web/serverFarms"
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name":"private-1",
                        "properties":{
                            "addressPrefix":"10.0.0.16/28"
                        }
                    }
                ]
            },
            "tags":{
                "Name":"[variables('vnetName')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Network/VirtualNetworks"
        },
        {
            "apiVersion":"2021-01-01",
            "kind":"StorageV2",
            "location":"[resourceGroup().location]",
            "name":"[variables('saAccount')]",
            "properties":{
                "accessTier":"Hot",
                "allowBlobPublicAccess":true,
                "allowSharedKeyAccess":true,
                "minimumTlsVersion":"TLS1_2",
                "networkAcls":{
                    "bypass":"AzureServices",
                    "defaultAction":"Allow"
                },
                "supportsHttpsTrafficOnly":true
            },
            "sku":{
                "name":"Standard_LRS"
            },
            "tags":{
                "Name":"[variables('saAccount')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Storage/storageAccounts"
        },
        {
            "apiVersion":"2021-01-01",
            "dependsOn":[
                "[resourceId('Microsoft.Storage/storageAccounts', variables('saAccount'))]"
            ],
            "name":"[concat(variables('saAccount'), '/default')]",
            "properties":{
                "cors":{
                    "corsRules":[
                        {
                            "allowedHeaders":[
                                "*"
                            ],
                            "allowedMethods":[
                                "GET",
                                "PUT"
                            ],
                            "allowedOrigins":[
                                "*"
                            ],
                            "exposedHeaders":[
                                "*"
                            ],
                            "maxAgeInSeconds":"84600"
                        }
                    ]
                }
            },
            "tags":{
                "Name":"[concat(variables('saAccount'), '/default')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Storage/storageAccounts/blobServices"
        },
        {
            "apiVersion":"2021-01-01",
            "dependsOn":[
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('saAccount'), 'default')]"
            ],
            "name":"[concat(variables('saAccount'), '/default/', variables('tblUsers'))]",
            "properties":{
                "metadata":{
                    "Name":"[concat(variables('saAccount'), '/default/', variables('tblUsers'))]",
                    "Project":"[parameters('project')]"
                }
            },
            "type":"Microsoft.Storage/storageAccounts/blobServices/containers"
        },
        {
            "apiVersion":"2020-09-01",
            "kind":"linux",
            "location":"[resourceGroup().location]",
            "name":"[variables('aspName')]",
            "properties":{
                "name":"[variables('aspName')]",
                "reserved":true
            },
            "sku":{
                "name":"S1"
            },
            "tags":{
                "Name":"[variables('aspName')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Web/serverfarms"
        },
        {
            "apiVersion":"2020-09-01",
            "dependsOn":[
                "[concat('Microsoft.Network/VirtualNetworks/', variables('vnetName'))]",
                "[concat('Microsoft.Web/serverfarms/', variables('aspName'))]"
            ],
            "location":"[resourceGroup().location]",
            "name":"[variables('appName')]",
            "properties":{
                "clientAffinityEnabled":false,
                "serverFarmId":"[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('project'), '/providers/Microsoft.Web/serverfarms/', variables('aspName'))]",
                "siteConfig":{
                    "appSettings":[
                        {
                            "name":"MONGODB_URI",
                            "value":"MongoDatabaseConnection"
                        },
                        {
                            "name":"STORAGE_SAS",
                            "value":"SharedAccessSignature"
                        }
                    ],
                    "ipSecurityRestrictions":[
                        {
                            "action":"Allow",
                            "description":"Allow FrontDoor",
                            "ipAddress":"AzureFrontDoor.Backend",
                            "name":"AllowFD",
                            "priority":1,
                            "tag":"ServiceTag"
                        },
                        {
                            "action":"Deny",
                            "description":"Deny All",
                            "ipAddress":"Any",
                            "name":"Deny All",
                            "priority":999
                        }
                    ],
                    "linuxFxVersion":"RUBY|2.6"
                }
            },
            "resources":[
                {
                    "apiVersion":"2019-08-01",
                    "dependsOn":[
                        "[concat('Microsoft.Web/sites/', variables('appName'))]"
                    ],
                    "name":"virtualNetwork",
                    "properties":{
                        "subnetResourceId":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'public-1')]",
                        "swiftSupported":true
                    },
                    "type":"config"
                }
            ],
            "tags":{
                "Name":"[variables('appName')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Web/sites"
        },
        {
            "apiVersion":"2020-09-01",
            "dependsOn":[
                "[concat('Microsoft.Web/sites/', variables('appName'))]"
            ],
            "location":"[resourceGroup().location]",
            "name":"[variables('appStgName')]",
            "properties":{
                "clientAffinityEnabled":false,
                "serverFarmId":"[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', parameters('project'), '/providers/Microsoft.Web/serverfarms/', variables('aspName'))]",
                "siteConfig":{
                    "appSettings":[
                        {
                            "name":"MONGODB_URI",
                            "value":"MongoDatabaseConnection"
                        },
                        {
                            "name":"STORAGE_SAS",
                            "value":"SharedAccessSignature"
                        }
                    ],
                    "ipSecurityRestrictions":[
                        {
                            "action":"Allow",
                            "description":"Allow FrontDoor",
                            "ipAddress":"AzureFrontDoor.Backend",
                            "name":"AllowFD",
                            "priority":1,
                            "tag":"ServiceTag"
                        },
                        {
                            "action":"Deny",
                            "description":"Deny All",
                            "ipAddress":"Any",
                            "name":"Deny All",
                            "priority":999
                        }
                    ],
                    "linuxFxVersion":"RUBY|2.6"
                }
            },
            "resources":[
                {
                    "apiVersion":"2019-08-01",
                    "dependsOn":[
                        "[concat('Microsoft.Web/sites/', variables('appName'), '/slots/stg')]"
                    ],
                    "name":"virtualNetwork",
                    "properties":{
                        "subnetResourceId":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'public-1')]",
                        "swiftSupported":true
                    },
                    "type":"config"
                }
            ],
            "tags":{
                "Name":"[variables('appStgName')]",
                "Project":"[parameters('project')]"
            },
            "type":"Microsoft.Web/sites/slots"
        }
    ],
    "variables":{
        "appName":"[concat(parameters('name'), '-site')]",
        "appStgName":"[concat(parameters('name'), '-site/stg')]",
        "aspName":"[concat(parameters('name'), '-asp')]",
        "dbAccount":"[concat(parameters('name'), '-mongo-db')]",
        "dbName":"main",
        "fdPrd":"[parameters('name')]",
        "fdStg":"[concat(parameters('name'), '-stg')]",
        "saAccount":"[replace(parameters('name'),'-', '')]",
        "tblUsers":"users",
        "vnetName":"[concat(parameters('name'), '-vnet')]"
    }
}